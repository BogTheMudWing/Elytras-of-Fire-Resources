name: Create Dragonspeak Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

#    - name: Generate unique string
#      id: unique_string
#      run: echo "::set-output name=unique_string::$(date +%Y%m%d%H%M%S)"
#######
    - name: Create release branch
      run: |
        git checkout -b release/${{ github.run_id }}
        git push origin release/${{ github.run_id }}
      continue-on-error: true

    - name: Archive code
      run: |
        # Create a ZIP archive of the main branch contents
        zip -r Dragonspeak-${{ github.run_id }}.zip .

        # Verify that the ZIP archive was created
        if [ -f Dragonspeak-${{ github.run_id }}.zip ]; then
          echo "ZIP archive created successfully."
        else
          echo "Failed to create ZIP archive."
          exit 1
        fi
      working-directory: ${{ github.workspace }}

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: Dragonspeak-${{ github.run_id }}.zip
        path: Dragonspeak-${{ github.run_id }}.zip

    - name: Create Git tag
      run: |
        git tag v${{ github.run_id }}
        git push origin v${{ github.run_id }}

    - name: Create release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        files: Dragonspeak-${{ github.run_id }}.zip
        tag_name: v${{ github.run_id }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Delete branch
      run: |
        git push origin --delete release/${{ github.run_id }}
      continue-on-error: true

    - name: Store release URL
      id: release_url
      run: echo "::set-output name=release_url::${{ steps.create_release.outputs.upload_url }}"
    
    - name: Display release URL
      run: |
        echo "Release URL: ${{ steps.release_url.outputs.release_url }}"
